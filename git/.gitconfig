[include]
	path = ~/Documents/2_areas/programming/git/gitconfig-sglavoie
[color]
	branch = auto
	diff = auto
	grep = auto
	interactive = auto
	status = auto
	ui = true
[alias]
	a = add
	br = branch
	c = commit
	ca = commit --amend
	can = commit --amend --no-edit
	ch = checkout
	d = diff
	difflast = diff --cached HEAD^
	ds = diff --staged
	fpush = push --force-with-lease
	l = log
	last = l -1 HEAD

	; log graph
	lg = l --color --graph --pretty=format:'%Cred%h%Creset \
-%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

	; log name
	ln = l --name-only

	; log decorate all
	logda = l --oneline --decorate --graph --all

	; log pretty
	lp = log --pretty='%C(yellow)%h %C(cyan)%ad %Cblue%aN%C(auto)%d \
%Creset%s' --date=relative --date-order --graph

	; log work descriptions in chronological order for today (oldest at top)
	lw = "!git log --oneline --pretty='%s' --after=`date -v -1d '+%Y-%m-%d'` | tac"

	ls = l --stat
	rc = rebase --continue
	ri = rebase -i
	s = status --short
	sh = show
	sl = shortlog

	; Save changes as a stash and leave them in the working tree
	stash-keep = "!git stash --include-untracked && git stash apply"

	t = tag
	undo = "!f() { git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f"
	unstage = reset HEAD --
	vdiff = difftool --tool=
	hs = log --pretty='%C(yellow)%h %C(cyan)%ad %Cblue%aN%C(auto)%d %Creset%s' --date=relative --date-order --graph
[core]
	; editor = code --wait
	editor = vim
	excludesfile = ~/.gitignore
	pager = delta
	autocrlf = input
	ignorecase = true
[commit]
	gpgsign = true
	template = ~/.gitmessage
[interactive]
	diffFilter = delta --color-only --features=interactive
[delta]
	features = decorations
	side-by-side = true
	dark = true

[delta "interactive"]
	keep-plus-minus-markers = false

[delta "decorations"]
	commit-decoration-style = blue ol
	commit-style = raw
	file-style = omit
	hunk-header-decoration-style = blue box
	hunk-header-file-style = red
	hunk-header-line-number-style = "#067a00"
	hunk-header-style = file line-number syntax
[merge]
	conflictstyle = diff3
; [mergetool "nvim"]
; 	cmd = nvim $MERGED
; [difftool "nvim"]
; 	cmd = nvim --diff $LOCAL $REMOTE
[mergetool "vscode"]
	cmd = code --wait $MERGED
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[mergetool]
  prompt = false
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	commit = yellow bold
	frag = magenta bold
	meta = 11
	new = green bold
	old = red bold
	whitespace = red reverse
[push]
	recurseSubmodules = on-demand
	default = current
[rebase]
	autoStash = true
	updateRefs = true
[rerere]
	autoUpdate = true
	enabled = true
[gpg]
	program = gpg
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	rebase = false
	ff = only
[credential]
	helper = store
[init]
	defaultBranch = main
[diff]
	tool = vscode
[column]
	ui = auto
[branch]
	sort = -committerdate
[maintenance]
	repo = /Users/sglavoie/1_dev_projects/tradition_ss
[fetch]
	writeCommitGraph = true
